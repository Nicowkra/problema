import pandas as pd
import numpy as np
import scipy.linalg as sc

def crearMatrizA(matriz):
    Nic_col = []    
    Pry_col = []
    for i in range(1,41): #Crea la lista de columnas a filtrar
        Nic_col.append('NICs'+str(i))
        Pry_col.append('PRYs'+str(i))
        
    Pry = matriz[matriz["Country_iso3"] == "PRY"] # Crea la tabla con filas de PRY
    Nic = matriz[matriz["Country_iso3"] == "NIC"] # Crea la tabla con filas de NIC
    
    
    # Crea matrices intra-regionales
    Pry_int= Pry.loc[:,Pry_col] 
    Nic_int = Nic.loc[:,Nic_col] 
    
    #Crea matrices intre-regionales
    Nic_ext = Nic.loc[:,Pry_col] 
    Pry_ext = Pry.loc[:,Nic_col]
    
    #Columna con los nombres de los sectores para despues mantener los indices
    colnames = pd.DataFrame({'Sectores':Pry_col + Nic_col})
    colnamesPry = pd.DataFrame({'Sectores':Pry_col})
    colnamesNic = pd.DataFrame({'Sectores':Nic_col})
    # Se cambian los indices a los nombres del sector
    Pry_int.index = colnamesPry['Sectores']
    Nic_int.index = colnamesNic['Sectores']
    Nic_ext.index = colnamesNic['Sectores']
    Pry_ext.index = colnamesPry['Sectores']
    
    #Concateno las submatrices para crear mi A
    A_Pry = pd.concat([Pry_int,Nic_ext])
    A_Nic = pd.concat([Pry_ext,Nic_int])
    A = pd.concat([A_Pry,A_Nic], axis=1)
    return A

def Leont2Reg(A,P): #Funcion de Leontief para 2 regiones, usando la formula (I-A)P = D
    m=A.shape[0] #filas A
    Id = np.identity(m)
    A = Id - A
    inv_A = sc.inv(A)
    return inv_A @ P

def shock():
    matriz = pd.read_excel("matriz.xlsx", sheet_name ="LAC_IOT_2011",)
    A = crearMatrizA(matriz)
    Pry = matriz[matriz["Country_iso3"] == "PRY"] # Crea la tabla con filas de PRY
    Nic = matriz[matriz["Country_iso3"] == "NIC"] # Crea la tabla con filas de NIC
    Nic_col = []    
    Pry_col = []
    for i in range(1,41): #Crea la lista de columnas a filtrar
        Nic_col.append('NICs'+str(i))
        Pry_col.append('PRYs'+str(i))
    #Creo los vectores de produccion total para luego usar como P en la formula A = ZP^(-1)
    Pry_out = Pry["Output"]
    Pry_out = Pry_out.replace(0,1) #remplazo 0 por 1
    Nic_out = Nic["Output"]
    Nic_out = Nic_out.replace(0,1) #remplazo 0 por 1

    colnames = pd.DataFrame({'Sectores':Pry_col + Nic_col})
    
    P1 = pd.concat([Pry_out,Nic_out]) #Vector P
    P1.index = colnames['Sectores']
       
    D1 = Leont2Reg(A,P1) # Demanda para las dos regiones originales
    D2 = Leont2Reg(A,P1) # Demanda para las dos regiones con los shocks aplicados
    D2[5] = D2[5]*0.9
    D2[6] = D2[6]*1.033
    D2[7] = D2[7]*1.033
    D2[8] = D2[8]*1.033
    Delta_Demanda = D2 - D1 # Diferencia de la demanda
    
shock()